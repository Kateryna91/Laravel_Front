{"ast":null,"code":"import axios from 'axios';\nimport http from '../../../http_common';\nimport jwt from 'jsonwebtoken';\nimport { AuthActionTypes } from './types';\nexport const LoginUser = data => async dispatch => {\n  try {\n    const response = await http.post(\"api/auth/login\", data);\n    const {\n      access_token\n    } = response.data;\n    const user = jwt.decode(access_token);\n    dispatch({\n      type: AuthActionTypes.LOGIN_AUTH,\n      payload: user\n    });\n    return Promise.resolve();\n  } catch (ex) {\n    if (axios.isAxiosError(ex)) {\n      const serverError = ex;\n\n      if (serverError && serverError.response) {\n        const {\n          data\n        } = serverError.response;\n        return Promise.reject(data);\n      }\n    }\n\n    return Promise.reject(ex);\n  }\n};","map":{"version":3,"sources":["D:/Laravel_Front/src/components/auth/Login/actions.ts"],"names":["axios","http","jwt","AuthActionTypes","LoginUser","data","dispatch","response","post","access_token","user","decode","type","LOGIN_AUTH","payload","Promise","resolve","ex","isAxiosError","serverError","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAqBC,eAArB,QAAmG,SAAnG;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAuB,MAAOC,QAAP,IAA0C;AACtF,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,IAAL,CAA0B,gBAA1B,EAA4CH,IAA5C,CAAvB;AACA,UAAM;AAACI,MAAAA;AAAD,QAAiBF,QAAQ,CAACF,IAAhC;AACA,UAAMK,IAAI,GAAGR,GAAG,CAACS,MAAJ,CAAWF,YAAX,CAAb;AACAH,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAET,eAAe,CAACU,UADjB;AAELC,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIA,WAAOK,OAAO,CAACC,OAAR,EAAP;AACH,GATD,CAUA,OAAMC,EAAN,EAAU;AACN,QAAGjB,KAAK,CAACkB,YAAN,CAAmBD,EAAnB,CAAH,EACA;AACI,YAAME,WAA2C,GAAGF,EAApD;;AACA,UAAGE,WAAW,IAAIA,WAAW,CAACZ,QAA9B,EACA;AACI,cAAM;AAACF,UAAAA;AAAD,YAASc,WAAW,CAACZ,QAA3B;AACA,eAAOQ,OAAO,CAACK,MAAR,CAAef,IAAf,CAAP;AACH;AACJ;;AACD,WAAOU,OAAO,CAACK,MAAR,CAAeH,EAAf,CAAP;AACH;AACJ,CAvBM","sourcesContent":["import axios, { AxiosError } from 'axios';\nimport { Dispatch } from 'react';\nimport http from '../../../http_common';\nimport jwt from 'jsonwebtoken';\nimport { AuthAction, AuthActionTypes, ILoginModel, ILoginResponse, ILoginServerError, IUser } from './types';\n\nexport const LoginUser = (data: ILoginModel) => async (dispatch: Dispatch<AuthAction>) => {\n    try {\n        const response = await http.post<ILoginResponse>(\"api/auth/login\", data);\n        const {access_token} = response.data;\n        const user = jwt.decode(access_token) as IUser;\n        dispatch({\n            type: AuthActionTypes.LOGIN_AUTH,\n            payload: user\n        });\n        return Promise.resolve();\n    }\n    catch(ex) {\n        if(axios.isAxiosError(ex))\n        {\n            const serverError : AxiosError<ILoginServerError> = ex;\n            if(serverError && serverError.response)\n            {\n                const {data} = serverError.response;\n                return Promise.reject(data);\n            }\n        }\n        return Promise.reject(ex);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport http from '../../../http_common';\nimport { setAuthUserByToken } from '../Login/actions';\nimport { RegisterActionTypes } from './types';\nexport const RegisterUser = data => {\n  return async dispatch => {\n    try {\n      //код прокоментовано в '../Login' \n      const response = await http.post(\"api/auth/register\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }); // зазначили контент тайп для передачі фото через форму\n\n      const {\n        access_token\n      } = response.data;\n      dispatch({\n        type: RegisterActionTypes.REGISTER_SUCCESS,\n        payload: access_token\n      });\n      setAuthUserByToken(access_token, dispatch);\n      return Promise.resolve(access_token);\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        const serverError = err;\n\n        if (serverError && serverError.response) {\n          const {\n            errors\n          } = serverError.response.data;\n          return Promise.reject(errors);\n        }\n      }\n    }\n  };\n};\n_c = RegisterUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterUser\");","map":{"version":3,"sources":["D:/Laravel_Front/src/components/auth/Register/actions.ts"],"names":["axios","http","setAuthUserByToken","RegisterActionTypes","RegisterUser","data","dispatch","response","post","headers","access_token","type","REGISTER_SUCCESS","payload","Promise","resolve","err","isAxiosError","serverError","errors","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAAyBC,mBAAzB,QAAoE,SAApE;AAGA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAoB;AAAC,SAAO,MAAOC,QAAP,IAA8C;AAClG,QAAI;AACA;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,IAAL,CAAU,mBAAV,EAA+BH,IAA/B,EAAqC;AAACI,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAAV,OAArC,CAAvB,CAFA,CAEoH;;AACpH,YAAM;AAACC,QAAAA;AAAD,UAAiBH,QAAQ,CAACF,IAAhC;AAEAC,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,mBAAmB,CAACS,gBADnB;AAEPC,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAKAR,MAAAA,kBAAkB,CAACQ,YAAD,EAAeJ,QAAf,CAAlB;AACA,aAAOQ,OAAO,CAACC,OAAR,CAAgBL,YAAhB,CAAP;AACH,KAZD,CAaA,OAAOM,GAAP,EAAiB;AACb,UAAIhB,KAAK,CAACiB,YAAN,CAAmBD,GAAnB,CAAJ,EAA6B;AAC3B,cAAME,WAAW,GAAGF,GAApB;;AACA,YAAIE,WAAW,IAAIA,WAAW,CAACX,QAA/B,EAAyC;AACvC,gBAAM;AAAEY,YAAAA;AAAF,cAAaD,WAAW,CAACX,QAAZ,CAAqBF,IAAxC;AACA,iBAAOS,OAAO,CAACM,MAAR,CAAeD,MAAf,CAAP;AACD;AACF;AACJ;AACJ,GAvBgD;AAwBhD,CAxBM;KAAMf,Y","sourcesContent":["import axios, { AxiosError } from 'axios';\nimport { Dispatch } from 'react';\nimport http from '../../../http_common';\nimport { setAuthUserByToken } from '../Login/actions';\nimport { RegisterAction, RegisterActionTypes, RegisterErrors } from './types';\n\n\nexport const RegisterUser = (data: FormData) => {return async (dispatch: Dispatch<RegisterAction>) => {\n    try {\n        //код прокоментовано в '../Login' \n        const response = await http.post(\"api/auth/register\", data, {headers: { \"Content-Type\": \"multipart/form-data\" },}); // зазначили контент тайп для передачі фото через форму\n        const {access_token} = response.data;\n\n        dispatch({\n          type: RegisterActionTypes.REGISTER_SUCCESS,\n          payload: access_token,\n        });\n\n        setAuthUserByToken(access_token, dispatch);\n        return Promise.resolve(access_token);  \n    }\n    catch (err: any) {\n        if (axios.isAxiosError(err)) {\n          const serverError = err as AxiosError<RegisterErrors>;\n          if (serverError && serverError.response) {\n            const { errors } = serverError.response.data;\n            return Promise.reject(errors);\n          }\n        }\n    }\n};\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export let AuthActionTypes;\n\n(function (AuthActionTypes) {\n  AuthActionTypes[\"LOGIN\"] = \"LOGIN\";\n  AuthActionTypes[\"LOGOUT\"] = \"LOGOUT\";\n})(AuthActionTypes || (AuthActionTypes = {}));","map":{"version":3,"sources":["D:/Laravel_Front/src/components/auth/Login/types.ts"],"names":["AuthActionTypes"],"mappings":"AAAA,WAAYA,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e","sourcesContent":["export enum AuthActionTypes {//енамка для екшенів\n    LOGIN = \"LOGIN\",\n    LOGOUT = \"LOGOUT\"\n}\n\n\nexport interface ILoginModel {//модель для форми\n    email: string,\n    password: string,\n    invalid: string\n}\n\nexport interface ILoginResponse { //інтерфейс даних які ми очікуємо з сервера\n    access_token: string,\n    user: IUser\n}\n\nexport interface ILoginServerError {\n    email: Array<string>\n    password: Array<string>,\n    error: string\n} \n\nexport interface IUser { //інтерфейс якай описує юзера\n    email: string,\n    image: string\n}\n\nexport interface AuthState { // дані які передаєм у діспатч\n    user: null|IUser,\n    isAuth: boolean,\n}\n\nexport interface LoginAuthAction {//опис екшену LOGIN\n    type: AuthActionTypes.LOGIN,\n    payload: IUser\n}\nexport interface LogoutAuthAction {//опис екшену LOGOUT\n    type: AuthActionTypes.LOGOUT\n}\n\nexport type AuthAction = LoginAuthAction | LogoutAuthAction;\n\nexport interface ILoginErrors {//інтерфейс для наших помилок\n    password: Array<string>;\n    email: Array<string> ;\n    invalid: string;\n  }\n  \n  export interface ILoginErrors {\n    errors: ILoginError,\n    status: number\n  }"]},"metadata":{},"sourceType":"module"}
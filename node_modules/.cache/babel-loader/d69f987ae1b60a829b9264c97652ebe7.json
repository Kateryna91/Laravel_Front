{"ast":null,"code":"var _jsxFileName = \"D:\\\\Laravel_Front\\\\src\\\\components\\\\auth\\\\Register\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { useActions } from '../../../hooks/useActions';\nimport { useNavigate } from 'react-router';\nimport { RegisterSchema } from './validtion';\nimport { InputGroup } from '../../common/InputGroup';\nimport EclipseWidget from '../../common/eclipse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegiterPage = () => {\n  _s();\n\n  const initialValues = {\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const [loading, setLoading] = useState(false);\n  const navigator = useNavigate();\n  const {\n    RegisterUser\n  } = useActions();\n\n  const onHandleSubmit = async (values, _ref) => {\n    let {\n      setFieldError\n    } = _ref;\n    console.log(\"29\");\n    const formData = new FormData();\n    Object.entries(values).forEach(_ref2 => {\n      let [key, value] = _ref2;\n      return formData.append(key, value);\n    });\n    console.log(\"34\", formData);\n\n    try {\n      setLoading(true);\n      await RegisterUser(formData);\n      await navigator(\"/\");\n      await setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      const serverErrors = err;\n      const {\n        email,\n        password,\n        confirmPassword\n      } = serverErrors;\n      if ((password === null || password === void 0 ? void 0 : password.length) !== 0) setFieldError(\"password\", password[0]);\n      if ((email === null || email === void 0 ? void 0 : email.length) !== 0) setFieldError(\"email\", email[0]);\n      if ((confirmPassword === null || confirmPassword === void 0 ? void 0 : confirmPassword.length) !== 0) setFieldError(\"confirmPassword\", confirmPassword[0]);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: RegisterSchema,\n    onSubmit: onHandleSubmit\n  });\n  const {\n    errors,\n    touched,\n    handleChange,\n    handleSubmit\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"email\",\n            label: \"\\u041F\\u043E\\u0448\\u0442\\u0430\",\n            placevalue: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043F\\u043E\\u0448\\u0442\\u0443\",\n            error: errors.email,\n            touched: touched.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"name\",\n            label: \"\\u041B\\u043E\\u0433\\u0456\\u043D\",\n            placevalue: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043B\\u043E\\u0433\\u0456\\u043D\",\n            error: errors.name,\n            touched: touched.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"password\",\n            label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            placevalue: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            touched: touched.password,\n            error: errors.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"confirmPassword\",\n            label: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            placevalue: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            touched: touched.confirmPassword,\n            error: errors.confirmPassword,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            disabled: loading,\n            children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }, this), loading && /*#__PURE__*/_jsxDEV(EclipseWidget, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n};\n\n_s(RegiterPage, \"JvPrx0JLX/L20MZUKN8ioY1J3qs=\", false, function () {\n  return [useNavigate, useActions, useFormik];\n});\n\n_c = RegiterPage;\nexport default RegiterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegiterPage\");","map":{"version":3,"sources":["D:/Laravel_Front/src/components/auth/Register/index.tsx"],"names":["useState","Form","FormikProvider","useFormik","useActions","useNavigate","RegisterSchema","InputGroup","EclipseWidget","RegiterPage","initialValues","email","name","password","confirmPassword","loading","setLoading","navigator","RegisterUser","onHandleSubmit","values","setFieldError","console","log","formData","FormData","Object","entries","forEach","key","value","append","err","serverErrors","length","formik","validationSchema","onSubmit","errors","touched","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Form, FormikProvider, FormikHelpers, useFormik } from \"formik\";\nimport { useActions } from '../../../hooks/useActions';\nimport { useNavigate } from 'react-router';\nimport {IRegisterModel, RegisterError} from './types';\nimport {RegisterSchema} from './validtion';\nimport {InputGroup} from '../../common/InputGroup';\nimport EclipseWidget from '../../common/eclipse';\n\n\n\nconst RegiterPage = () =>{\n\n\n    const initialValues : IRegisterModel={\n        email: \"\",\n        name: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    }\n\n    \n    const [loading, setLoading] = useState<boolean>(false);\n    const navigator = useNavigate();\n\n    const { RegisterUser } = useActions();\n\n      const onHandleSubmit = async (values: IRegisterModel, { setFieldError }: FormikHelpers<IRegisterModel>) =>{\n      console.log(\"29\")\n      const formData = new FormData();\n      Object.entries(values).forEach(([key, value]) =>\n        formData.append(key, value)\n      );\n      console.log(\"34\", formData);\n      try {\n        \n        setLoading(true);\n        await RegisterUser(formData);\n        await navigator(\"/\");\n        await setLoading(false);\n\n      } catch (err) {\n        setLoading(false);\n        const serverErrors = err as RegisterError;\n        const {email, password, confirmPassword} = serverErrors;\n        if(password?.length !== 0)\n          setFieldError(\"password\", password[0]);\n        if (email?.length !== 0)\n          setFieldError(\"email\", email[0]);\n        if (confirmPassword?.length !== 0) \n          setFieldError(\"confirmPassword\", confirmPassword[0]);\n      }\n    }\n    \n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: RegisterSchema,\n        onSubmit: onHandleSubmit\n    })\n\n    const { errors, touched, handleChange, handleSubmit } = formik;\n\n\n\n\n    return(\n            <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3\">\n                <h1>Реєстрація на сайті</h1>\n                <FormikProvider value={formik}>\n                  <Form onSubmit={handleSubmit}>\n                    <InputGroup\n                      field=\"email\"\n                      label=\"Пошта\"\n                      placevalue =\"Введіть пошту\"\n                      error={errors.email}\n                      touched={touched.email}\n                      onChange={handleChange}\n                    />\n\n                    <InputGroup\n                      field=\"name\"\n                      label=\"Логін\"\n                      placevalue =\"Введіть логін\"\n                      error={errors.name}\n                      touched={touched.name}\n                      onChange={handleChange}\n                    />\n        \n                    <InputGroup\n                      field=\"password\"\n                      label=\"Пароль\"\n                      type=\"password\"\n                      placevalue =\"Введіть пароль\"\n                      touched={touched.password}\n                      error={errors.password}\n                      onChange={handleChange}\n                    />\n\n                    <InputGroup\n                      field=\"confirmPassword\"\n                      label=\"Повторіть пароль\"\n                      type=\"password\"\n                      placevalue =\"Повторіть пароль\"\n                      touched={touched.confirmPassword}\n                      error={errors.confirmPassword}\n                      onChange={handleChange}\n                    />\n        \n                    <button type=\"submit\" className=\"btn btn-success\" disabled={loading}>\n                        Реєстрація\n                    </button>\n                  </Form>\n                </FormikProvider>\n              </div>\n              <div className=\"col-3\"></div>\n                    {loading && <EclipseWidget />}\n            </div>\n    );\n}\nexport default RegiterPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Laravel_Front\\\\src\\\\components\\\\auth\\\\Register\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { useNavigate } from 'react-router';\nimport { RegisterSchema } from './validation';\nimport { InputGroup } from '../../common/InputGroup';\nimport EclipseWidget from '../../common/eclipse';\nimport { RegisterUser } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegiterPage = () => {\n  _s();\n\n  const initialValues = {\n    email: \"\",\n    name: \"\",\n    photo: [],\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const [loading, setLoading] = useState(false);\n  const navigator = useNavigate();\n  const [img, setImg] = useState(); //const { RegisterUser } = useActions();\n\n  const handleFileChange = e => {\n    setFieldValue(\"photo\", e.target.files[0]);\n    const file = e.target.files[0];\n    setImg(URL.createObjectURL(file));\n  };\n\n  const onHandleSubmit = async (values, _ref) => {\n    let {\n      setFieldError\n    } = _ref;\n    //коментарі до коду в логінці\n    const formData = new FormData();\n    Object.entries(values).forEach(_ref2 => {\n      let [key, value] = _ref2;\n      return formData.append(key, value);\n    });\n\n    try {\n      setLoading(true);\n      await RegisterUser(formData);\n      await navigator(\"/\");\n      await setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      const serverErrors = err;\n      const {\n        email,\n        password,\n        confirmPassword\n      } = serverErrors;\n      if ((password === null || password === void 0 ? void 0 : password.length) !== 0) setFieldError(\"password\", password[0]);\n      if ((email === null || email === void 0 ? void 0 : email.length) !== 0) setFieldError(\"email\", email[0]);\n      if ((confirmPassword === null || confirmPassword === void 0 ? void 0 : confirmPassword.length) !== 0) setFieldError(\"confirmPassword\", confirmPassword[0]);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: RegisterSchema,\n    onSubmit: onHandleSubmit\n  });\n  const {\n    errors,\n    touched,\n    handleChange,\n    handleSubmit,\n    setFieldValue\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-2\",\n      children: img && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            height: \"300px\",\n            alt: \"asdasd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"email\",\n            label: \"\\u041F\\u043E\\u0448\\u0442\\u0430\" //placevalue =\"Введіть пошту\"\n            ,\n            error: errors.email,\n            touched: touched.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"name\",\n            label: \"\\u041B\\u043E\\u0433\\u0456\\u043D\" //placevalue =\"Введіть логін\"\n            ,\n            error: errors.name,\n            touched: touched.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"password\",\n            label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\" //placevalue =\"Введіть пароль\"\n            ,\n            touched: touched.password,\n            error: errors.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"confirmPassword\",\n            label: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\" //placevalue =\"Повторіть пароль\"\n            ,\n            touched: touched.confirmPassword,\n            error: errors.confirmPassword,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            field: \"photo\",\n            label: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\" //type=\"file\"\n            ,\n            placevalue: \"\\u0412\\u0438\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\",\n            error: errors.photo,\n            onChange: handleFileChange,\n            touched: touched.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            disabled: loading,\n            children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }, this), loading && /*#__PURE__*/_jsxDEV(EclipseWidget, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this);\n};\n\n_s(RegiterPage, \"bzew8pbIXi/SrRzeIOAbXRHnjXY=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = RegiterPage;\nexport default RegiterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegiterPage\");","map":{"version":3,"sources":["D:/Laravel_Front/src/components/auth/Register/index.tsx"],"names":["useState","Form","FormikProvider","useFormik","useNavigate","RegisterSchema","InputGroup","EclipseWidget","RegisterUser","RegiterPage","initialValues","email","name","photo","password","confirmPassword","loading","setLoading","navigator","img","setImg","handleFileChange","e","setFieldValue","target","files","file","URL","createObjectURL","onHandleSubmit","values","setFieldError","formData","FormData","Object","entries","forEach","key","value","append","err","serverErrors","length","formik","validationSchema","onSubmit","errors","touched","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Form, FormikProvider, FormikHelpers, useFormik } from \"formik\";\nimport { useActions } from '../../../hooks/useActions';\nimport { useNavigate } from 'react-router';\nimport {IRegisterModel, RegisterError} from './types';\nimport {RegisterSchema} from './validation';\nimport {InputGroup} from '../../common/InputGroup';\nimport EclipseWidget from '../../common/eclipse';\nimport { RegisterUser } from \"./actions\";\n\n\nconst RegiterPage = () =>{\n\n\n    const initialValues : IRegisterModel={\n        email: \"\",\n        name: \"\",\n        photo: [],\n        password: \"\",\n        confirmPassword: \"\"\n    }\n\n    \n    const [loading, setLoading] = useState<boolean>(false);\n    const navigator = useNavigate();\n\n    const [img, setImg] = useState<string>();\n    //const { RegisterUser } = useActions();\n\n    const handleFileChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n      setFieldValue(\"photo\", (e.target as any).files[0]);\n      const file = (e.target as any).files[0]\n      setImg( URL.createObjectURL(file));\n    }\n\n    const onHandleSubmit = async (values: IRegisterModel, { setFieldError }: FormikHelpers<IRegisterModel>) =>\n    {\n      //коментарі до коду в логінці\n      const formData = new FormData();\n      Object.entries(values).forEach(([key, value]) =>\n        formData.append(key, value)\n      );\n      try {\n        setLoading(true);\n        await RegisterUser(formData);\n        await navigator(\"/\");\n        await setLoading(false);\n      }\n      catch (err) {\n        setLoading(false);\n        const serverErrors = err as RegisterError;\n        const {email, password, confirmPassword} = serverErrors;\n        if(password?.length !== 0)\n          setFieldError(\"password\", password[0]);\n        if (email?.length !== 0)\n          setFieldError(\"email\", email[0]);\n        if (confirmPassword?.length !== 0) \n          setFieldError(\"confirmPassword\", confirmPassword[0]);\n      }\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: RegisterSchema,\n        onSubmit: onHandleSubmit\n    })\n\n    const { errors, touched, handleChange, handleSubmit, setFieldValue } = formik;\n\n\n\n\n    return(\n            <div className=\"row\">\n              <div className=\"col-2\">\n                {img && (\n                  <div className=\"card mt-5\">\n                    <div className=\"card-body text-center\">\n                      <img src={img} height='300px' alt=\"asdasd\" />\n                    </div>\n                  </div>\n                )}\n              </div>\n              <div className=\"col-md-6 offset-md-3\">\n                <h1>Реєстрація на сайті</h1>\n                <FormikProvider value={formik}>\n                  <Form onSubmit={handleSubmit}>\n                    <InputGroup\n                      field=\"email\"\n                      label=\"Пошта\"\n                      //placevalue =\"Введіть пошту\"\n                      error={errors.email}\n                      touched={touched.email}\n                      onChange={handleChange}\n                    />\n\n                    <InputGroup\n                      field=\"name\"\n                      label=\"Логін\"\n                      //placevalue =\"Введіть логін\"\n                      error={errors.name}\n                      touched={touched.name}\n                      onChange={handleChange}\n                    />\n        \n                    <InputGroup\n                      field=\"password\"\n                      label=\"Пароль\"\n                      type=\"password\"\n                      //placevalue =\"Введіть пароль\"\n                      touched={touched.password}\n                      error={errors.password}\n                      onChange={handleChange}\n                    />\n\n                    <InputGroup\n                      field=\"confirmPassword\"\n                      label=\"Повторіть пароль\"\n                      type=\"password\"\n                      //placevalue =\"Повторіть пароль\"\n                      touched={touched.confirmPassword}\n                      error={errors.confirmPassword}\n                      onChange={handleChange}\n                    />\n\n                    <InputGroup\n                      field=\"photo\"\n                      label=\"Аватар\"\n                      //type=\"file\"\n                      placevalue = \"Виберіть фото\"\n                      error={errors.photo}\n                      onChange={handleFileChange}\n                      touched={touched.photo}\n                    />\n      \n                    <button type=\"submit\" className=\"btn btn-success\" disabled={loading}>\n                        Реєстрація\n                    </button>\n                  </Form>\n                </FormikProvider>\n              </div>\n              <div className=\"col-3\"></div>\n                    {loading && <EclipseWidget />}\n            </div>\n    );\n}\nexport default RegiterPage;\n"]},"metadata":{},"sourceType":"module"}
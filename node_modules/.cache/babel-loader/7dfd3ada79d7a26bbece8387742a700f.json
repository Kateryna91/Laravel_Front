{"ast":null,"code":"var _jsxFileName = \"D:\\\\Laravel_Front\\\\src\\\\components\\\\auth\\\\Register\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Formik, Form, formikRef } from 'formik';\nimport { push } from \"connected-react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport MyTextInput from '../../common/MyTextInput';\nimport validationFields from './validation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MyPhotoInput from '../../common/MyPhotoInput';\nimport { RegisterUser } from '../../../actions/auth';\nimport EclipseWidget from '../../common/eclipse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = () => {\n  _s();\n\n  const initState = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    fio: '',\n    photo: null\n  };\n  const dispatch = useDispatch();\n  const formikRef = useRef();\n  const titleRef = useRef();\n  const [invalid, setInvalid] = useState([]);\n  const history = useHistory();\n  const {\n    errors\n  } = useSelector(state => state.auth);\n  const [loading, setLoading] = useState(false); // const onSubmitHandler = (values) => {\n  //     //Робимо форму, у якій можна відправити файл\n  //     const formData = new FormData();\n  //     //formData.append(\"email\", values.email);\n  //     //у форічі біжимо по initState і передаємо дані в форму \n  //     //key - email, value-ff@dd.dd\n  //     Object.entries(values).forEach(([key, value]) => formData.append(key, value));\n  //     dispatch (RegisterUser(formData))\n  //         .then(result=> {\n  //             history.push(\"/\");\n  //         }) \n  //         .catch(ex=>{\n  //             const {errors}=ex;\n  //             Object.entries(errors).forEach(([key, values]) => {\n  //                         let message = '';\n  //                         values.forEach(text=> message+=text+\" \");\n  //                         formikRef.current.setFieldError(key,message);\n  //                     });\n  //                     setInvalid(errors.invalid);\n  //                     titleRef.current.scrollIntoView({ behavior: 'smooth' })\n  //                 });\n  // }\n\n  const onSubmitHandler = async values => {\n    console.log(\"errors\", errors);\n\n    try {\n      const formData = new FormData();\n      Object.entries(values).forEach(_ref => {\n        let [key, value] = _ref;\n        return formData.append(key, value);\n      });\n      setLoading(true);\n      dispatch(RegisterUser(formData)).then(result => {\n        setLoading(false);\n        dispatch(push(\"/\"));\n      }).catch(ex => {\n        setLoading(false);\n        Object.entries(ex.errors).forEach(_ref2 => {\n          let [key, values] = _ref2;\n          let message = '';\n          values.forEach(text => message += text + \" \");\n          formikRef.current.setFieldError(key, message);\n        });\n        setInvalid(ex.errors.invalid);\n        titleRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      });\n    } catch (error) {\n      setLoading(false);\n      console.log(\"Server is bad register from\", errors);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      ref: titleRef,\n      className: \"text-center\",\n      children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), invalid && invalid.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: invalid.map((text, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offset-md-3 col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        innerRef: formikRef,\n        initialValues: initState,\n        onSubmit: onSubmitHandler,\n        validationSchema: validationFields(),\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"\\u041F\\u0406\\u0411\",\n            name: \"fio\",\n            id: \"fio\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"\\u0415\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430 \\u043F\\u043E\\u0448\\u0442\\u0430\",\n            name: \"email\",\n            id: \"email\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MyPhotoInput, {\n            myField: \"photo\",\n            name: \"photo\",\n            id: \"photo\",\n            formikRef: formikRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            name: \"password\",\n            id: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            name: \"confirmPassword\",\n            id: \"confirmPassword\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"S71d3txjfDjfENsaZSk+Fsy7jW0=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["D:/Laravel_Front/src/components/auth/Register/RegisterPage.js"],"names":["React","useRef","useState","Formik","Form","formikRef","push","useHistory","MyTextInput","validationFields","useDispatch","useSelector","MyPhotoInput","RegisterUser","EclipseWidget","RegisterPage","initState","email","password","confirmPassword","fio","photo","dispatch","titleRef","invalid","setInvalid","history","errors","state","auth","loading","setLoading","onSubmitHandler","values","console","log","formData","FormData","Object","entries","forEach","key","value","append","then","result","catch","ex","message","text","current","setFieldError","scrollIntoView","behavior","error","length","map","index"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react'\nimport { Formik, Form, formikRef} from 'formik';\nimport { push } from \"connected-react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport MyTextInput from '../../common/MyTextInput';\nimport validationFields from './validation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MyPhotoInput from '../../common/MyPhotoInput';\nimport { RegisterUser } from '../../../actions/auth';\nimport EclipseWidget from '../../common/eclipse';\n\nconst RegisterPage = () => {\n\n    const initState = {\n        email: '',\n        password: '',\n        confirmPassword: '',\n        fio: '',\n        photo: null\n    };\n\n    const dispatch = useDispatch();\n    const formikRef = useRef();\n    const titleRef = useRef();\n    const [invalid, setInvalid] = useState([]);\n    const history = useHistory();\n\n    const { errors } = useSelector(state => state.auth);\n  \n    const [loading, setLoading] = useState(false);\n\n\n\n    // const onSubmitHandler = (values) => {\n\n    //     //Робимо форму, у якій можна відправити файл\n    //     const formData = new FormData();\n    //     //formData.append(\"email\", values.email);\n    //     //у форічі біжимо по initState і передаємо дані в форму \n    //     //key - email, value-ff@dd.dd\n    //     Object.entries(values).forEach(([key, value]) => formData.append(key, value));\n        \n        \n    //     dispatch (RegisterUser(formData))\n    //         .then(result=> {\n    //             history.push(\"/\");\n    //         }) \n    //         .catch(ex=>{\n    //             const {errors}=ex;\n    //             Object.entries(errors).forEach(([key, values]) => {\n    //                         let message = '';\n    //                         values.forEach(text=> message+=text+\" \");\n    //                         formikRef.current.setFieldError(key,message);\n    //                     });\n            \n    //                     setInvalid(errors.invalid);\n    //                     titleRef.current.scrollIntoView({ behavior: 'smooth' })\n    //                 });\n\n\n   \n    // }\n    const onSubmitHandler = async (values) => {\n\n        console.log(\"errors\", errors);\n        try {            \n            const formData = new FormData();\n            Object.entries(values).forEach(([key, value]) => formData.append(key, value));\n            setLoading(true);\n            dispatch(RegisterUser(formData))\n                .then(result => {\n                    setLoading(false);\n                    dispatch(push(\"/\"));\n                })\n                .catch(ex=> {\n                    setLoading(false);\n                    Object.entries(ex.errors).forEach(([key, values]) => {\n                        let message = '';\n                        values.forEach(text=> message+=text+\" \");\n                        formikRef.current.setFieldError(key,message);\n                    });\n\n                    setInvalid(ex.errors.invalid);\n                    titleRef.current.scrollIntoView({ behavior: 'smooth' })\n                    \n                });\n        }\n        catch (error) {\n            setLoading(false);\n            console.log(\"Server is bad register from\", errors);\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <h1 ref={titleRef} className=\"text-center\">Реєстрація</h1>\n\n            {\n                invalid && invalid.length > 0 &&\n                <div className=\"alert alert-danger\">\n                    <ul>\n                        {\n                            invalid.map((text, index) => {\n                                return (\n                                    <li key={index}>{text}</li>\n\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n\n            }\n\n            <div className=\"offset-md-3 col-md-6\">\n                <Formik\n                    innerRef={formikRef}\n                    initialValues={initState}\n                    onSubmit={onSubmitHandler}\n                    validationSchema={validationFields()}>\n                    <Form>\n                        <MyTextInput\n                            label=\"ПІБ\"\n                            name=\"fio\"\n                            id=\"fio\"\n                            type=\"text\"\n                        />\n\n                        <MyTextInput\n                            label=\"Електронна пошта\"\n                            name=\"email\"\n                            id=\"email\"\n                            type=\"text\"\n                        />\n\n                        <MyPhotoInput\n                            myField=\"photo\"\n                            name=\"photo\"\n                            id=\"photo\"\n                            formikRef={formikRef}\n                        />\n\n                        <MyTextInput\n                            label=\"Пароль\"\n                            name=\"password\"\n                            id=\"password\"\n                            type=\"password\"\n                        />\n                        <MyTextInput\n                            label=\"Повтор пароль\"\n                            name=\"confirmPassword\"\n                            id=\"confirmPassword\"\n                            type=\"password\"\n                        />\n\n\n                        <button type=\"submit\" className=\"btn btn-success\">Реєстрація</button>\n                    </Form>\n                </Formik>\n            </div>\n        </div>\n    );\n}\n\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}